---
const response = await fetch(
	"https://devlloyd.recruitee.com/api/offers/"
	// "https://rocketsourcers.recruitee.com/api/offers/"
);
const data = await response.json();
---

<html lang="nl">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<!-- <script defer src="/src/javascript/card.js"></script> -->
		<meta name="generator" content={Astro.generator} />
		<title>Astro</title>
	</head>
	<body>
		<app-header
			link1="https://rocketsourcers-vacatures.netlify.app/"
			link2="https://dev-lloyd.nl"
			link3="https://dev-lloyd.nl"
			link4="https://dev-lloyd.nl"
		>
			<div slot="naam">Your Website Name</div>
		</app-header>
		<h1>Vacatures</h1>

		<p>{data.offers[0].title}</p>

		<ul>
			{
				data.offers.map((d) => (
					<li class="card">
						<h2>{d.title}</h2>
						<br />

						<p>{d.country}</p>

						<p>{d.location}</p>
						<br />

						<a href={d.slug}>
							bekijk vacature
						</a>
					</li>
				))
			}
		</ul>
		<script>
			class AppHeader extends HTMLElement {
	constructor() {
		super();

		// Voeg shadow root toe
		const shadowRoot = this.attachShadow({ mode: "open" });

		// HTML template voor de Shadow DOM 
		const template = document.createElement("template");

		template.innerHTML = `
        <style>
        header {
            position: relative;
            background-color: #333;
            color: #fff;
            padding: 10px;
            text-align: center;
            display: flex;
            align-items: center;
            justify-content: space-between;
        }

        #burger {
            display: none;
        }

        nav {
            display: flex;
            justify-content: center;
            /* background-color: #444; */
            padding: 10px;
        }

        nav a {
            color: #fff;
            text-decoration: none;
            padding: 10px 20px;
            margin: 0 10px;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }

        nav a:hover {
            background-color: #555;
        }

        p#test {
            color: red;
        }

        @media (max-width: 720px) {

            header {
                position: relative;
                background-color: #333;
                color: #fff;
                padding: 10px;
                text-align: center;
                display: flex;
                align-items: center;
                justify-content: space-between;
            }

            #burger {
                display: block;
                background-color: #fff;
                border-radius: 2px;
                padding: 3px;  
                z-index: 5;
            }

            nav {
                position: absolute;
                display: flex;
                flex-direction: column;
                justify-content: center;
                height: 100vh;
                top: 0;
                right: 0;
                background-color: #333;
                width: 100%;
                transform: translateX(100%); 
                opacity: 0;
                transition: all 1s;
            }

            .open{
                transform: translateX(0); 
                opacity: 1;
                transition: all 1s;
            }
        }
    </style>

    <header>
        <h1> <slot name='naam' /></h1>
        <img id="burger" src="/images/burger-menu.svg" width="25" height="25" alt="">
        <nav id="navigatie">
            <a href="${this.getAttribute('link1')}">Home</a>
            <a href="${this.getAttribute('link2')}">About</a>
            <a href="${this.getAttribute('link3')}">Services</a>
            <a href="${this.getAttribute('link4')}">Contact</a>
        </nav>
    </header>
        `;

		// Append de tamplate aan de shadow DOM
		const shadowRootContent = template.content.cloneNode(true);
		shadowRoot.appendChild(shadowRootContent);

        const menu = shadowRoot.getElementById("navigatie");
		this.shadowRoot.querySelector("#burger").addEventListener('click', () => {menu.classList.toggle("open");});
		// this.shadowRoot.querySelector("#burger").addEventListener('click', () => {menu.style.opacity = "1"});
	}
}

// Define the custom element tag
customElements.define("app-header", AppHeader);


		</script>
	</body>
</html>

<style scoped>
	* {
		margin: 0;
		padding: 0;
		box-sizing: border-box;
		text-decoration: none;
		font-family: Arial, Helvetica, sans-serif;
	}

	h1 {
		font-size: 50px;
		margin: 80px 0;
	}

	h2 {
		font-size: 25px;
	}

	p {
		font-size: 16px;
	}

	ul {
		display: grid;
		grid-template-columns: 1fr 1fr 1fr;
		gap: 24px;
	}

	li.card {
		list-style: none;
		border: 1px solid #1d1d1d;
		padding: 40px;
	}

	a {
		display: block;
		background-color: #1d1d1d;
		color: #fff;
		padding: 15px 20px;
		margin-top: 24px;
		width: 250px;
	}

	@media (max-width: 600px) {
		h1 {
			font-size: 30px;
			margin: 80px 0;
		}

		h2 {
			font-size: 15px;
		}

		p {
			font-size: 14px;
		}

		ul {
			display: grid;
			grid-template-columns: 1fr;
			gap: 24px;
		}
	}
</style>
